name: release
run-name: 'Release'
on:
  release:
    types:
      - released
env:
  RELEASE_VERSION: ${{ github.ref_name }}
jobs:
  build:
    uses: ./.github/workflows/build.yml
    with:
      artifact-name: 'vscode-pdf-${{ github.ref_name }}'

  release:
    runs-on: ubuntu-22.04
    needs:
      - build
    env:
      RELEASE_MANAGEMENT_TOKEN: ${{ secrets.ACCESS_TOKEN_FOR_RELEASE_MANAGEMENT }}
    steps:
      - name: download-artifact
        uses: actions/download-artifact@v4
        with:
          name: 'vscode-pdf-${{ env.RELEASE_VERSION }}'

      - name: upload-assets
        env:
          GITHUB_RELEASE_API: '${{ github.api_url }}/repos/${{ github.repository }}/releases/tags/${{ env.RELEASE_VERSION }}'
          EXTENSION_ASSET: 'pdf-${{ env.RELEASE_VERSION }}.vsix'
        run: |
          curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${RELEASE_MANAGEMENT_TOKEN}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -o release-info.json \
            "${GITHUB_RELEASE_API}"
          UPLOAD_URL=$(jq --raw-output '.assets_url' release-info.json )
          echo "Upload to: ${UPLOAD_URL}"
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${RELEASE_MANAGEMENT_TOKEN}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -H "Content-Type: application/octet-stream" \
            --data-binary "@${EXTENSION_ASSET}" \
            "${UPLOAD_URL}?name=${EXTENSION_ASSET}" \
  
